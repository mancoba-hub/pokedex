@page "/"
@inject HttpClient Http
@using System.IO

<div class="row justify-content-center m-3">
    <div class="col">
        <img src="../images/pokemon.png" alt="Image" />
    </div>
    <div class="col-sm-8">
        <div class="card">
            <div class="card-header">
                <h5>Search for pokemon</h5>
            </div>

            <div class="card-body text-center">
                <h5>Pokemon name : </h5>
                <input type="text" id="txtPokemon" name="txtPokemon" @bind="SearchValue" />
            </div>
            <div class="card-footer text-center">
                <button class="btn btn-primary" @onclick="@(() => SearchPokemon())">
                    Search
                </button>
            </div>
        </div>
    </div>
</div>


@if (pokemons == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var pokemon in pokemons)
            {
                <tr>
                    <td>
                        <NavLink class="nav-link" href="pokemon">
                            <span class="oi" aria-hidden="true"></span> @pokemon.Name
                        </NavLink>
                    </td>
                    <td>
                        <button class="btn btn-primary" @onclick="@(() => ViewPokemon(@pokemon.Name))">
                            View
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private ModelPokemon[] pokemons;

    private string SearchValue;

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    protected override async Task OnInitializedAsync()
    {
        pokemons = await Http.GetFromJsonAsync<ModelPokemon[]>("https://localhost:44389/pokedex");
    }

    private void ViewPokemon(string name)
    {
        NavigationManager.NavigateTo($"/pokemon/{name}");
    }

    private async Task SearchPokemon()
    {
        string name = SearchValue;
        pokemons = await Http.GetFromJsonAsync<ModelPokemon[]>($"https://localhost:44389/search/{name}");
    }

    public class ModelPokemon
    {
        public int Id { get; set; }

        public string Name { get; set; }

        public string Abilities { get; set; }

        public string Weight { get; set; }

        public string ImageFrontUrl { get; set; }

        public string ImageBackUrl { get; set; }
    }
}
